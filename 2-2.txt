2.2.1

create table 'cours'(
'id' integer primary key value autoincrement,
'title' text,
'description' text,
'lecon_id' integer
);

create table 'lecon'(
'id' integer primary key value autoincrement,
'title' text,
'body' text
);

2.2.2

tables : user, pins

create table 'users'(
'id' integer primary key value autoincrement,
'name' text
);

create table 'pins'(
'id' integer primary key value autoincrement,
'user_id' integer,
'image_URL' text,
'user_id_comment' text
);


2.2.3

create table 'user'(
'id' integer primary key value autoincrement,
'name' text 
);









2.3. Faire des requêtes en base 

- Récupérer tous les albums : 
	select * from albums;


- Récupérer tous les albums dont le titre contient "Great"
	select * from albums where Title like '%Great%' ;


- Donner le nombre total d'albums contenus dans la base (sans regarder les id bien sûr)
	SELECT count(*) from albums ;


- Supprimer tous les albums dont le nom contient "music"
	DELETE FROM albums WHERE Title like '%music%' ;


-Récupérer tous les albums écrits par AC/DC
	SELECT * FROM albums  WHERE ArtistID = 1 ;


-Récupérer tous les titres des albums de AC/DC
	SELECT * FROM tracks WHERE AlbumID = 1 OR AlbumID = 4 ;


-Récupérer la liste des titres de l'album "Let There Be Rock"
	SELECT * FROM tracks WHERE  AlbumID = 4 ;


-Afficher le prix de cet album ainsi que sa durée totale
	SELECT sum(UnitPrice) FROM tracks WHERE AlbumId = 4 ;
	SELECT SUM(Milliseconds) FROM tracks WHERE AlbumId = 4;


-Afficher le coût de l'intégralité de la discographie de "Deep Purple"
	SELECT * FROM artists WHERE name = 'Deep Purple' ;
	SELECT SUM(UnitPrice) FROM tracks,albums WHERE tracks.AlbumId = albums.AlbumId  AND albums.ArtistId = 58 ;


-Créer l'album de ton artiste favori en base, en renseignant correctement les trois tables : albums, artists et tracks
	- Done !





